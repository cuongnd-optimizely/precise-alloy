{"version":3,"file":"pl-states.js","sources":["../../../src/assets/scripts/pl-states.entry.ts"],"sourcesContent":["interface Theme {\n  value: string,\n  name: string\n};\n\ninterface StateOption {\n  name: string,\n  value: string\n}\n\ninterface State {\n  name: string,\n  options?: StateOption[],\n  multiple?: boolean\n}\n\ninterface StateButton {\n  parentSelector?: string,\n  styleModifier: string,\n  zIndex?: number\n}\n\ninterface ComponentState {\n  name: string,\n  selector: string,\n  button?: StateButton,\n  states: State[]\n}\n\n(() => {\n  let index = 100000;\n\n  const themes: Theme[] = [\n    {\n      \"value\": \"theme-blue-p\",\n      \"name\": \"Blue\"\n    },\n    {\n      \"value\": \"theme-white-p\",\n      \"name\": \"White\"\n    },\n    {\n      \"value\": \"theme-sand-s\",\n      \"name\": \"Sand\"\n    },\n    {\n      \"value\": \"theme-flow-25\",\n      \"name\": \"Flow 25\"\n    },\n    {\n      \"value\": \"theme-wave-ac\",\n      \"name\": \"Wave\"\n    },\n    {\n      \"value\": \"theme-wave-50\",\n      \"name\": \"Wave 50\"\n    },\n    {\n      \"value\": \"theme-pearl-s\",\n      \"name\": \"Pearl\"\n    },\n    {\n      \"value\": \"theme-pebble-s\",\n      \"name\": \"Pebble\"\n    }\n  ];\n\n  const newId = () => {\n    return \"pl-state-id-\" + index++;\n  };\n\n  const createSelect = (state: State, classList: DOMTokenList) => {\n    if (!state.options) {\n      return \"\";\n    }\n\n    const options = state.options;\n    const name = newId();\n    const header = state.multiple\n      ? 'Select many...'\n      : options.find(o => classList.contains(o.value))?.name ?? \"---\";\n    const type = state.multiple ? 'checkbox' : 'radio';\n\n    let optionsHtml = '';\n    options.forEach((option: StateOption) => {\n      const selectedHtml = classList.contains(option.value) ? \"checked\" : \"\";\n      const id = newId();\n      optionsHtml += `<input name=\"${name}\" class=\"pl-state-bar__input\" type=\"${type}\" id=\"${id}\" data-name=\"${option.name}\" value=\"${option.value}\" ${selectedHtml}/>`\n        + `<label class=\"pl-state-bar__label\" for=\"${id}\"><span>${option.name}</span></label>`\n    });\n\n    let html = `<div class=\"pl-state-bar__group\">`\n      + `<div>${state.name}:</div>`\n      + `<div class=\"pl-state-bar__group-header\">${header}</div>`\n      + `<div class=\"pl-state-bar__checkbox-group\">${optionsHtml}</div>`\n      + `</div>`;\n\n    return html;\n  };\n\n  const deactiveStateButtons = () => {\n    var stateButtons = [...document.querySelectorAll(\".pl-state__button\")];\n    stateButtons.forEach(stateButton => stateButton.classList.remove(\"active\"));\n  };\n\n  const closeButtonClickHandler = (stateBar: HTMLElement) => {\n    stateBar.classList.remove(\"expand\");\n    document.body.classList.remove(\"pl-state-expand\");\n    deactiveStateButtons();\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const stateButtonClickHandler = (item: HTMLElement, stateButton: HTMLElement, plState: ComponentState) => {\n    deactiveStateButtons();\n\n    const stateBar: HTMLElement | null = document.querySelector(\".pl-state-bar\");\n    if (!stateBar) {\n      return;\n    }\n\n    if (stateButton.classList.contains(\"active\")) {\n      closeButtonClickHandler(stateBar);\n      return;\n    }\n\n    const stateBarContent = stateBar.querySelector(\".pl-state-bar__content\");\n    if (stateBarContent) {\n      let stateBarContentHtml = '';\n      let index = 0;\n      plState.states.forEach(state => {\n        const combinedState = state.name === \"Theme\" && !state.options ? { ...state, options: themes } : state;\n        stateBarContentHtml += createSelect(combinedState, item.classList);\n\n        index++;\n\n        if (index == 1) {\n          stateBarContentHtml += stateBarCloseButtonHtml();\n        }\n      });\n      stateBarContent.innerHTML = stateBarContentHtml;\n\n      const closeButton = stateBarContent.querySelector(\".pl-state-bar__close-button\");\n      if (closeButton) {\n        closeButton.addEventListener(\"click\", () => closeButtonClickHandler(stateBar));\n      }\n\n      const stateBarGroups = [...stateBarContent.querySelectorAll(\".pl-state-bar__group\")];\n      stateBarGroups.forEach(stateBarGroup => {\n        const stateBarGroupHeader = stateBarGroup.querySelector(\".pl-state-bar__group-header\");\n        const checkboxGroup = stateBarGroup.querySelector(\".pl-state-bar__checkbox-group\");\n        if (!stateBarGroupHeader || !checkboxGroup) {\n          return;\n        }\n\n        if (stateBarGroupHeader) {\n          stateBarGroupHeader.addEventListener(\"click\", () => {\n            checkboxGroup.classList.toggle(\"expand\");\n          });\n          document.addEventListener(\"click\", (e: MouseEvent) => {\n            if (!e.target) {\n              return;\n            }\n\n            const node = e.target as Node;\n\n            if (!checkboxGroup.contains(node) && !stateBarGroupHeader.contains(node)) {\n              checkboxGroup.classList.remove(\"expand\");\n            }\n          })\n        }\n\n        const checkboxes = stateBarGroup.querySelectorAll(\"input[type='checkbox']\");\n        [].forEach.call(checkboxes, (checkbox: HTMLInputElement) => {\n          checkbox.addEventListener(\"change\", () => {\n            if (!checkbox.value) {\n              return;\n            }\n\n            if (checkbox.checked) {\n              item.classList.add(checkbox.value);\n            } else {\n              item.classList.remove(checkbox.value);\n            }\n            window.dispatchEvent(new Event('resize'));\n          });\n        });\n\n        const radios = stateBarGroup.querySelectorAll(\"input[type='radio']\");\n        [].forEach.call(radios, (radio: HTMLInputElement) => {\n          radio.addEventListener(\"change\", () => {\n            [].forEach.call(radios, (r: HTMLInputElement) => {\n              if (r.value) {\n                item.classList.remove(r.value);\n              }\n            });\n            if (radio.value) {\n              item.classList.add(radio.value);\n            }\n            stateBarGroupHeader.textContent = radio.getAttribute(\"data-name\");\n            checkboxGroup.classList.remove(\"expand\");\n          });\n        });\n\n        const radioLabels = [...stateBarGroup.querySelectorAll(\"input[type='radio'] + label\")];\n        radioLabels.forEach(radioLabel => {\n          radioLabel.addEventListener(\"click\", () => {\n            checkboxGroup.classList.remove(\"expand\");\n          });\n        });\n      });\n\n      stateBar.classList.add(\"expand\");\n      stateButton.classList.add(\"active\");\n      document.body.classList.add(\"pl-state-expand\");\n      window.dispatchEvent(new Event('resize'));\n    }\n  };\n  const stateBarCloseButtonHtml = () => {\n    return `<div class=\"pl-state-bar__buttons\"><a class=\"pl-state-bar__close-button\"></a></div>`;\n  };\n\n  const appendButtons = (states: ComponentState[]) => {\n    const stateBarHtml = `<div class=\"pl-state-bar\"><div class=\"pl-state-bar__content\"></div>${stateBarCloseButtonHtml()}</div>`;\n\n    document.body.insertAdjacentHTML('beforeend', stateBarHtml);\n    const stateBar: HTMLElement | null = document.querySelector(\".pl-state-bar\");\n    if (!stateBar) {\n      return;\n    }\n\n    const closeButton = stateBar.querySelector(\".pl-state-bar__close-button\");\n    if (closeButton) {\n      closeButton.addEventListener(\"click\", () => closeButtonClickHandler(stateBar));\n    }\n\n    [].forEach.call(states, (plState: ComponentState) => {\n      if (!plState || !plState.selector) {\n        return;\n      }\n\n      const buttonModifier = plState.button?.styleModifier ?? '';\n      const buttonTitle = plState.name ? `title=\"Show state modifier for: ${plState.name}\"` : '';\n      const buttonZIndex = plState.button?.zIndex ? `style=\"z-index: ${plState.button.zIndex};\"` : '';\n\n      const items = document.querySelectorAll(plState.selector);\n      [].forEach.call(items, (item: HTMLElement) => {\n        let html = `<div class=\"pl-state ${buttonModifier}\" ${buttonZIndex}>`\n          + `<div class=\"pl-state__controls\">`\n          + `<button class=\"pl-state__button\" ${buttonTitle}>`\n          + `<img src=\"/pl-states.svg\" loading=\"async\">`\n          + `</button></div></div>`;\n\n        const stateButtonParent = plState.button?.parentSelector ? item.querySelector(plState.button.parentSelector) : item;\n        if (!stateButtonParent) {\n          return;\n        }\n        stateButtonParent.insertAdjacentHTML('beforeend', html);\n\n        const stateContainer: HTMLElement | null = stateButtonParent.querySelector(\":scope > .pl-state\");\n        if (!stateContainer) {\n          return;\n        }\n\n        const stateButton: HTMLElement | null = stateContainer.querySelector(\".pl-state__button\");\n        if (stateButton) {\n          stateButton.addEventListener(\"click\", () => {\n            stateButtonClickHandler(item, stateButton, plState);\n          })\n        }\n      });\n    });\n\n    addEventListener(\"resize\", function () {\n      const stateBar = document.querySelector(\".pl-state-bar\");\n      if (!stateBar) {\n        return;\n      }\n\n      const stateBarRect = stateBar.getBoundingClientRect();\n      document.documentElement.style.setProperty(\"--pl-state-bar-height\", Math.ceil(stateBarRect.height) + \"px\");\n    })\n  };\n\n  const init = () => {\n    const localStorageKey = \"pl-show-state-selector\";\n    const showStateSelector = localStorage.getItem(localStorageKey);\n\n    if (!showStateSelector) {\n      return;\n    }\n\n    fetch(\"/pl-states.json\")\n      .then((response) => response.json())\n      .then((data) => appendButtons(data));\n  };\n\n  init();\n})();\n"],"names":["index","themes","newId","createSelect","state","classList","_a","options","name","header","o","type","optionsHtml","option","selectedHtml","id","deactiveStateButtons","stateButtons","stateButton","closeButtonClickHandler","stateBar","stateButtonClickHandler","item","plState","stateBarContent","stateBarContentHtml","combinedState","stateBarCloseButtonHtml","closeButton","stateBarGroup","stateBarGroupHeader","checkboxGroup","e","node","checkboxes","checkbox","radios","radio","r","radioLabel","appendButtons","states","stateBarHtml","_b","buttonModifier","buttonTitle","buttonZIndex","items","html","stateButtonParent","stateContainer","stateBarRect","localStorageKey","response","data"],"mappings":"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"}